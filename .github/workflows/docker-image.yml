name: Pipeline CI-CD

on:
  push:
    branches: [ "main" ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r CI-CD-Automation-Pipeline/requirements.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/ci-cd-automation-pipeline:latest
          context: CI-CD-Automation-Pipeline
          file: CI-CD-Automation-Pipeline/Dockerfile

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ vars.DOCKERHUB_USERNAME }}/ci-cd-automation-pipeline:latest
          severity: HIGH,CRITICAL
          exit-code: 0
          scan-type: image
          scan-ref: .
          ignore-unfixed: true
          vuln-type: os,library
          format: table
          list-all-pkgs: false
          cache-dir: .trivy_cache

      - name: Notify Slack - Build and Push
        if: steps.build_push.outcome == 'success'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "Docker image built and pushed successfully.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ Docker image built and pushed successfully."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack - Build Failed
        if: steps.build_push.outcome == 'failure'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "Failed to build and push Docker image.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ Failed to build and push Docker image."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
  
    runs-on: ubuntu-latest
    
    needs: build_and_push 
    
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 167.99.141.96 >> ~/.ssh/known_hosts
      
      - name: Deploy to Docker host
        run: |
          IMAGE="${{ vars.DOCKERHUB_USERNAME }}/ci-cd-automation-pipeline:latest"
          ssh -i ~/.ssh/id_rsa root@167.99.141.96 "docker stop ci-cd-automation-pipeline || true && \
                                                    docker rm ci-cd-automation-pipeline || true && \
                                                    docker pull $IMAGE || true && \
                                                    docker run -d --name ci-cd-automation-pipeline -p 80:80 $IMAGE"

      - name: Notify Slack - Deployment
        if: success()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "Deployment to Docker host completed successfully.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ Deployment to Docker host completed successfully."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack - Deployment Failed
        if: failure()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "Deployment to Docker host failed.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ Deployment to Docker host failed."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
