name: Pipeline CI-CD

on:
  push:
    branches: [ "main" ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r CI-CD-Automation-Pipeline/requirements.txt
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/ci-cd-automation-pipeline:latest
          context: CI-CD-Automation-Pipeline
          file: CI-CD-Automation-Pipeline/Dockerfile

  deploy:
  
    runs-on: ubuntu-latest
    
    needs: build_and_push 
    
    steps:

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 104.248.40.238 >> ~/.ssh/known_hosts
    
      - name: Deploy to Docker host
        run: |
          IMAGE="${{ vars.DOCKERHUB_USERNAME }}/ci-cd-automation-pipeline:latest"
          ssh -i ~/.ssh/id_rsa root@104.248.40.238 "docker stop ci-cd-automation-pipeline && \
                                                    docker rm ci-cd-automation-pipeline || true && \
                                                    docker pull $IMAGE || true && \
                                                    docker run -d --name ci-cd-automation-pipeline -p 80:80 $IMAGE"

  monitoring:

    runs-on: ubuntu-latest
    
    needs: deploy
    
    steps:

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


      
